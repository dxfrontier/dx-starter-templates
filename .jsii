{
  "author": {
    "email": "mathias.von-kaiz@abs-gmbh.de",
    "name": "Mathias von Kaiz",
    "roles": [
      "author"
    ]
  },
  "bundled": {
    "construct": "^1.0.0"
  },
  "dependencies": {
    "projen": "^0.88.6"
  },
  "dependencyClosure": {
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    },
    "projen": {
      "submodules": {
        "projen.awscdk": {},
        "projen.build": {},
        "projen.cdk": {},
        "projen.cdk8s": {},
        "projen.cdktf": {},
        "projen.circleci": {},
        "projen.github": {},
        "projen.github.workflows": {},
        "projen.gitlab": {},
        "projen.java": {},
        "projen.javascript": {},
        "projen.python": {},
        "projen.release": {},
        "projen.typescript": {},
        "projen.vscode": {},
        "projen.web": {}
      },
      "targets": {
        "go": {
          "moduleName": "github.com/projen/projen-go"
        },
        "java": {
          "maven": {
            "artifactId": "projen",
            "groupId": "io.github.cdklabs"
          },
          "package": "io.github.cdklabs.projen"
        },
        "js": {
          "npm": "projen"
        },
        "python": {
          "distName": "projen",
          "module": "projen"
        }
      }
    }
  },
  "description": "projen-template-projects",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/dxfrontier/projen-template-projects.git",
  "jsiiVersion": "5.5.9 (build 9ca058c)",
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    },
    "tscRootDir": "src"
  },
  "name": "projen-template-projects",
  "readme": {
    "markdown": "# Projen Template for Github Actions\n\nA project template for (projen)[https://projen.io/] to create a Github Action project.\n\n## Features\n\n- Automates project setup and configuration\n- Pre-configured with tools like TypeScript, ESLint, Prettier, and GitHub Actions\n- Customizable settings for seamless project management\n"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dxfrontier/projen-template-projects.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "js": {
      "npm": "projen-template-projects"
    }
  },
  "types": {
    "projen-template-projects.CommitLint": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.CommitLintBase",
      "docs": {
        "stability": "stable",
        "summary": "CommitLint component implementing all relevant configuration for the project."
      },
      "fqn": "projen-template-projects.CommitLint",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.",
          "stability": "stable",
          "summary": "Initializes the CommitLint component."
        },
        "locationInModule": {
          "filename": "src/github-action/commitlint.ts",
          "line": 15
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure CommitLint for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/commitlint.ts",
        "line": 8
      },
      "name": "CommitLint",
      "properties": [
        {
          "docs": {
            "custom": {
              "override": "true",
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Settings to be added to package.json for the CommitLint component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/github-action/commitlint.ts",
            "line": 25
          },
          "name": "npmSettings",
          "overrides": "projen-template-projects.CommitLintBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/github-action/commitlint:CommitLint"
    },
    "projen-template-projects.CommitLintBase": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "Base class for CommitLint component implementing all relevant configuration."
      },
      "fqn": "projen-template-projects.CommitLintBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base CommitLint component."
        },
        "locationInModule": {
          "filename": "src/base/commitlint.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure CommitLint for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/commitlint.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Installs development dependencies for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 114
          },
          "name": "addDevDependencies",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 118
          },
          "name": "addGitAttributes",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds npm scripts specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 108
          },
          "name": "addScripts",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configures settings specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 102
          },
          "name": "addSettings",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds template files to the component's project directory."
          },
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 96
          },
          "name": "addTemplates",
          "overrides": "projen-template-projects.Component",
          "protected": true
        }
      ],
      "name": "CommitLintBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "NPM packages to be installed as devDependencies for the CommitLint component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 78
          },
          "name": "devDependencies",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the CommitLint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 22
          },
          "name": "filePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Settings to be added to package.json for the CommitLint component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 92
          },
          "name": "npmSettings",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "union": {
                  "types": [
                    {
                      "primitive": "string"
                    },
                    {
                      "collection": {
                        "elementtype": {
                          "primitive": "string"
                        },
                        "kind": "array"
                      }
                    }
                  ]
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "NPM scripts for the CommitLint component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 68
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Template file for the CommitLint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/commitlint.ts",
            "line": 30
          },
          "name": "template",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/base/commitlint:CommitLintBase"
    },
    "projen-template-projects.Component": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "docs": {
        "stability": "stable",
        "summary": "Base class for managing project component configurations."
      },
      "fqn": "projen-template-projects.Component",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the component for a specified project."
        },
        "locationInModule": {
          "filename": "src/base/component.ts",
          "line": 13
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure the component for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/component.ts",
        "line": 6
      },
      "methods": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Installs development dependencies for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/component.ts",
            "line": 39
          },
          "name": "addDevDependencies",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/component.ts",
            "line": 45
          },
          "name": "addGitAttributes",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds npm scripts specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/component.ts",
            "line": 33
          },
          "name": "addScripts",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/component.ts",
            "line": 27
          },
          "name": "addSettings",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Adds template files to the component's project directory."
          },
          "locationInModule": {
            "filename": "src/base/component.ts",
            "line": 21
          },
          "name": "addTemplates",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "public": "This method is intended to be called in the constructor of each child class\nto set up the basic configuration for the component. It sequentially calls\na set of setup methods which performs specific configuration tasks for the project.\n\n### Usage\n- This method should be called in each child's constructor immediately after\n  invoking `super()` to ensure the component is fully initialized."
            },
            "stability": "stable",
            "summary": "Initialize component configuration for the project."
          },
          "locationInModule": {
            "filename": "src/base/component.ts",
            "line": 59
          },
          "name": "initialize"
        }
      ],
      "name": "Component",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "src/base/component.ts",
            "line": 7
          },
          "name": "project",
          "protected": true,
          "type": {
            "fqn": "projen.typescript.TypeScriptProject"
          }
        }
      ],
      "symbolId": "src/base/component:Component"
    },
    "projen-template-projects.DevContainer": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.DevContainerBase",
      "docs": {
        "stability": "stable",
        "summary": "DevContainer component implementing all relevant configuration for the project."
      },
      "fqn": "projen-template-projects.DevContainer",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.",
          "stability": "stable",
          "summary": "Initializes the DevContainer component."
        },
        "locationInModule": {
          "filename": "src/github-action/devcontainer.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure CommitLint for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/devcontainer.ts",
        "line": 7
      },
      "name": "DevContainer",
      "properties": [
        {
          "docs": {
            "custom": {
              "override": "true"
            },
            "stability": "stable",
            "summary": "VSCode extensions to be installed in the DevContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/github-action/devcontainer.ts",
            "line": 23
          },
          "name": "extensions",
          "overrides": "projen-template-projects.DevContainerBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/github-action/devcontainer:DevContainer"
    },
    "projen-template-projects.DevContainerBase": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "Base class for DevContainer component implementing all relevant configuration."
      },
      "fqn": "projen-template-projects.DevContainerBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base DevContainer component."
        },
        "locationInModule": {
          "filename": "src/base/devcontainer.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure DevContainer for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/devcontainer.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 96
          },
          "name": "addGitAttributes",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds npm scripts specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 90
          },
          "name": "addScripts",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds template files to the component's project directory."
          },
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 86
          },
          "name": "addTemplates",
          "overrides": "projen-template-projects.Component",
          "protected": true
        }
      ],
      "name": "DevContainerBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Docker image used for the DevContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 30
          },
          "name": "dockerImage",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "VSCode extensions to be installed in the DevContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 50
          },
          "name": "extensions",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Features to be installed in the DevContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 38
          },
          "name": "features",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the CommitLint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 22
          },
          "name": "filePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "NPM scripts used within the DevContainer environment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 80
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "The first script in `scripts` is used as the postCreateCommand to install dependencies upon creation.",
            "stability": "stable",
            "summary": "Template file for DevContainer creation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/devcontainer.ts",
            "line": 59
          },
          "name": "template",
          "protected": true,
          "type": {
            "fqn": "projen.JsonFileOptions"
          }
        }
      ],
      "symbolId": "src/base/devcontainer:DevContainerBase"
    },
    "projen-template-projects.GitHub": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.GitHubBase",
      "docs": {
        "stability": "stable",
        "summary": "GitHub component implementing all relevant configurtion for the project."
      },
      "fqn": "projen-template-projects.GitHub",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.",
          "stability": "stable",
          "summary": "Initializes the GitHub component."
        },
        "locationInModule": {
          "filename": "src/github-action/github.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure GitHub for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/github.ts",
        "line": 7
      },
      "name": "GitHub",
      "symbolId": "src/github-action/github:GitHub"
    },
    "projen-template-projects.GitHubActionProject": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Project",
      "docs": {
        "stability": "stable",
        "summary": "Defines a GitHub Action project."
      },
      "fqn": "projen-template-projects.GitHubActionProject",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the GitHub Action project."
        },
        "locationInModule": {
          "filename": "src/github-action/project.ts",
          "line": 19
        },
        "parameters": [
          {
            "docs": {
              "summary": "Additional project options."
            },
            "name": "options",
            "type": {
              "fqn": "projen-template-projects.ProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/project.ts",
        "line": 14
      },
      "name": "GitHubActionProject",
      "symbolId": "src/github-action/project:GitHubActionProject"
    },
    "projen-template-projects.GitHubBase": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "Base class for GitHub component implementeing all relevant configuration."
      },
      "fqn": "projen-template-projects.GitHubBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base GitHub component."
        },
        "locationInModule": {
          "filename": "src/base/github.ts",
          "line": 16
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure GitHub component for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/github.ts",
        "line": 11
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 419
          },
          "name": "addGitAttributes",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds template files to the component's project directory."
          },
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 408
          },
          "name": "addTemplates",
          "overrides": "projen-template-projects.Component",
          "protected": true
        }
      ],
      "name": "GitHubBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to GitHub bug issue template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 24
          },
          "name": "bugIssueFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Issue template for the GitHub Bug configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 90
          },
          "name": "bugIssueTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "This file is used by release workflow to create the Changelog.",
            "stability": "stable",
            "summary": "Cliff toml configuration for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 170
          },
          "name": "cliffTomlConfiguration",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "This file is used by release workflow to create the Changelog.",
            "stability": "stable",
            "summary": "File path to the Cliff toml configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 49
          },
          "name": "cliffTomlFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to GitHub feature issue template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 32
          },
          "name": "featureIssueFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Issue template for the GitHub feature configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 118
          },
          "name": "featureIssueTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Pull Request template for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 57
          },
          "name": "pullRequestTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to GitHub question issue template."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 40
          },
          "name": "questionIssueFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Template for the GitHub Question Issue configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 148
          },
          "name": "questionIssueTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Workflow release template for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 263
          },
          "name": "releaseWorkflowOptions",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Workflow stale template options for the GitHub configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/github.ts",
            "line": 295
          },
          "name": "staleWorkflowOptions",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/base/github:GitHubBase"
    },
    "projen-template-projects.Husky": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.HuskyBase",
      "docs": {
        "stability": "stable",
        "summary": "Husky component implementing all relevant configurtion for the project."
      },
      "fqn": "projen-template-projects.Husky",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.",
          "stability": "stable",
          "summary": "Initializes the Husky component."
        },
        "locationInModule": {
          "filename": "src/github-action/husky.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure Husky for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/husky.ts",
        "line": 7
      },
      "name": "Husky",
      "symbolId": "src/github-action/husky:Husky"
    },
    "projen-template-projects.HuskyBase": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "Base class for Husky component implementing all relevant configuration."
      },
      "fqn": "projen-template-projects.HuskyBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the Husky component."
        },
        "locationInModule": {
          "filename": "src/base/husky.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure Husky for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/husky.ts",
        "line": 9
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Installs development dependencies for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 107
          },
          "name": "addDevDependencies",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 111
          },
          "name": "addGitAttributes",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds npm scripts specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 101
          },
          "name": "addScripts",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds template files to the component's project directory."
          },
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 96
          },
          "name": "addTemplates",
          "overrides": "projen-template-projects.Component",
          "protected": true
        }
      ],
      "name": "HuskyBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the Husky commit-msg hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 22
          },
          "name": "commitMsgFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Commit-msg hook template for the Husky configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 38
          },
          "name": "commitMsgTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "NPM packages to be installed as devDependencies for the CommitLint component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 72
          },
          "name": "devDependencies",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the Husky pre-commit hook."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 30
          },
          "name": "preCommitFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Pre-commit hook template for the Husky configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 50
          },
          "name": "preCommitTemplate",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "NPM scripts for the CommitLint component."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/husky.ts",
            "line": 62
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "src/base/husky:HuskyBase"
    },
    "projen-template-projects.NpmPackage": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.NpmPackageBase",
      "docs": {
        "stability": "stable",
        "summary": "NPM Package component implementing all relevant configurtion for the project."
      },
      "fqn": "projen-template-projects.NpmPackage",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.\nAdditionally it calls `removeScripts()` to ensure, that no projen standard scripts are defined\nas these scripts are not needed for this kind of project.",
          "stability": "stable",
          "summary": "Initializes the NPM Package component."
        },
        "locationInModule": {
          "filename": "src/github-action/npm.ts",
          "line": 16
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure NPM Package for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/npm.ts",
        "line": 7
      },
      "name": "NpmPackage",
      "symbolId": "src/github-action/npm:NpmPackage"
    },
    "projen-template-projects.NpmPackageBase": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "Base class for NPM Package component implementing all relevant configuration."
      },
      "fqn": "projen-template-projects.NpmPackageBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base NPM Package component."
        },
        "locationInModule": {
          "filename": "src/base/npm.ts",
          "line": 13
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure NPM for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/npm.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 93
          },
          "name": "addGitAttributes",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Configures settings specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 76
          },
          "name": "addSettings",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "Overwrite this method if you want to keep the projen standard scripts.",
            "stability": "stable",
            "summary": "Removes the NPM Package scripts associated with Projen NPM Package initialization."
          },
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 87
          },
          "name": "removeScripts",
          "protected": true
        }
      ],
      "name": "NpmPackageBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File paths for the .gitattributes file entries. These entries are not added automatically by projen and we have not extra component for these. So we handle them here."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 31
          },
          "name": "gitAttributesFilePaths",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the NPM Package ignore configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 21
          },
          "name": "ignoreFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "NPM file paths to be packaged for the NPM Package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 39
          },
          "name": "npmFilePaths",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "remarks": "These scripts are added by Projen on project initialization\nand are not needed for our projects.\nOverwrite this method if you want to keep the projen standard scripts.",
            "stability": "stable",
            "summary": "Getter retrieving the npm scripts to be removed from NPM Package."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/npm.ts",
            "line": 50
          },
          "name": "projenScripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/base/npm:NpmPackageBase"
    },
    "projen-template-projects.Prettier": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.PrettierBase",
      "docs": {
        "stability": "stable",
        "summary": "Prettier component implementing all relevant configurtion for the project."
      },
      "fqn": "projen-template-projects.Prettier",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.",
          "stability": "stable",
          "summary": "Initializes the Prettier component."
        },
        "locationInModule": {
          "filename": "src/github-action/prettier.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure Prettier for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/prettier.ts",
        "line": 7
      },
      "name": "Prettier",
      "symbolId": "src/github-action/prettier:Prettier"
    },
    "projen-template-projects.PrettierBase": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "Base class for Prettier component implementing all relevant configuration."
      },
      "fqn": "projen-template-projects.PrettierBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base Prettier component."
        },
        "locationInModule": {
          "filename": "src/base/prettier.ts",
          "line": 18
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure Prettier for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/prettier.ts",
        "line": 13
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 76
          },
          "name": "addGitAttributes",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds npm scripts specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 70
          },
          "name": "addScripts",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configures settings specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 66
          },
          "name": "addSettings",
          "overrides": "projen-template-projects.Component",
          "protected": true
        }
      ],
      "name": "PrettierBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the Prettier ignore configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 26
          },
          "name": "ignoreFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "NPM scripts used by Prettier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 59
          },
          "name": "scripts",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Settings for the Prettier configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 42
          },
          "name": "settings",
          "protected": true,
          "type": {
            "fqn": "projen.javascript.PrettierOverride"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the Prettier settings configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/prettier.ts",
            "line": 34
          },
          "name": "settingsFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/base/prettier:PrettierBase"
    },
    "projen-template-projects.Project": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen.typescript.TypeScriptProject",
      "docs": {
        "stability": "stable",
        "summary": "Base class for managing project configuration."
      },
      "fqn": "projen-template-projects.Project",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the project."
        },
        "locationInModule": {
          "filename": "src/base/project.ts",
          "line": 20
        },
        "parameters": [
          {
            "docs": {
              "summary": "Additional project options."
            },
            "name": "options",
            "type": {
              "fqn": "projen-template-projects.ProjectOptions"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/project.ts",
        "line": 15
      },
      "name": "Project",
      "symbolId": "src/base/project:Project"
    },
    "projen-template-projects.ProjectOptions": {
      "assembly": "projen-template-projects",
      "datatype": true,
      "docs": {
        "stability": "stable"
      },
      "fqn": "projen-template-projects.ProjectOptions",
      "interfaces": [
        "projen.typescript.TypeScriptProjectOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "src/base/project.ts",
        "line": 10
      },
      "name": "ProjectOptions",
      "symbolId": "src/base/project:ProjectOptions"
    },
    "projen-template-projects.SampleCode": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "SampleCode component implementing all relevant configuration for the project."
      },
      "fqn": "projen-template-projects.SampleCode",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.",
          "stability": "stable",
          "summary": "Initializes the base SampleCode component."
        },
        "locationInModule": {
          "filename": "src/github-action/samplecode.ts",
          "line": 15
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure SampleCode for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/samplecode.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds template files to the component's project directory."
          },
          "locationInModule": {
            "filename": "src/github-action/samplecode.ts",
            "line": 79
          },
          "name": "addTemplates",
          "overrides": "projen-template-projects.Component",
          "protected": true
        }
      ],
      "name": "SampleCode",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the sample GitHub action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/github-action/samplecode.ts",
            "line": 24
          },
          "name": "filePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "GitHub action template for the SampleCode configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/github-action/samplecode.ts",
            "line": 32
          },
          "name": "sampleAction",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "src/github-action/samplecode:SampleCode"
    },
    "projen-template-projects.VSCode": {
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.VSCodeBase",
      "docs": {
        "stability": "stable",
        "summary": "VSCode component implementing all relevant configuration for the project."
      },
      "fqn": "projen-template-projects.VSCode",
      "initializer": {
        "docs": {
          "remarks": "It calls the `initialize()` method immediately after invoking `super(project)`\nto ensure that all necessary configuration steps are applied.",
          "stability": "stable",
          "summary": "Initializes the VSCode component."
        },
        "locationInModule": {
          "filename": "src/github-action/vscode.ts",
          "line": 14
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure VSCode Package for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/github-action/vscode.ts",
        "line": 7
      },
      "name": "VSCode",
      "symbolId": "src/github-action/vscode:VSCode"
    },
    "projen-template-projects.VSCodeBase": {
      "abstract": true,
      "assembly": "projen-template-projects",
      "base": "projen-template-projects.Component",
      "docs": {
        "stability": "stable",
        "summary": "Base class for VSCode component implementing all relevant configurarion."
      },
      "fqn": "projen-template-projects.VSCodeBase",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the base VSCode component."
        },
        "locationInModule": {
          "filename": "src/base/vscode.ts",
          "line": 12
        },
        "parameters": [
          {
            "docs": {
              "summary": "The project to configure VSCode component for."
            },
            "name": "project",
            "type": {
              "fqn": "projen.typescript.TypeScriptProject"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "src/base/vscode.ts",
        "line": 7
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds custom entries to the `.gitattributes` file for the component in the project."
          },
          "locationInModule": {
            "filename": "src/base/vscode.ts",
            "line": 52
          },
          "name": "addGitAttributes",
          "overrides": "projen-template-projects.Component",
          "protected": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Configures settings specific to the component within the project."
          },
          "locationInModule": {
            "filename": "src/base/vscode.ts",
            "line": 48
          },
          "name": "addSettings",
          "overrides": "projen-template-projects.Component",
          "protected": true
        }
      ],
      "name": "VSCodeBase",
      "properties": [
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "Settings to be installed in VSCode."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/vscode.ts",
            "line": 28
          },
          "name": "settings",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "protected": "true"
            },
            "stability": "stable",
            "summary": "File path to the VSCode settings configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "src/base/vscode.ts",
            "line": 20
          },
          "name": "settingsFilePath",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "src/base/vscode:VSCodeBase"
    }
  },
  "version": "0.0.0",
  "fingerprint": "Q0hQ5TszZtENZEtv7gBuVQ5L5VxihxG/CAvYYFSZXaw="
}